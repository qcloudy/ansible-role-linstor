- set_fact:
    _etcd_local_env: "{{ temp_directory }}/{{ ansible_host }}/etcd.env"

- fetch:
    src: "{{ etcd_env_file }}"
    dest: "{{ temp_directory }}/{{ ansible_host }}/"
    flat: yes

- block:
  - set_fact:
      _etcd_hosts: "{{ lookup('ini', 'ETCD_ADVERTISE_CLIENT_URLS type=properties file='~_etcd_local_env) | regex_replace('https?:\/\/', '') | join('') }}"

  - debug:
      msg: _etcd_hosts "{{ _etcd_hosts }}"

  - set_fact:
      linstor_db_connection_url: "etcd://{% for node in groups[etcd_group_name] %}{% if hostvars[node]['_etcd_hosts'] | d('') | length %}{{ hostvars[node]['_etcd_hosts'] }}{% if not loop.last %},{% endif %}{% endif %}{% endfor %}"
  when: linstor_db_connection_url is not defined

- set_fact:
    linstor_db_ca_certificate: "{{ lookup('ini', 'ETCDCTL_CACERT type=properties file='~_etcd_local_env) }}"
  when: linstor_db_ca_certificate is not defined

- set_fact:
    linstor_db_client_certificate: "{{ lookup('ini', 'ETCDCTL_CERT type=properties file='~_etcd_local_env) }}"
  when: linstor_db_client_certificate is not defined

- block:
  - set_fact:
      _linstor_db_key: "{{ lookup('ini', 'ETCDCTL_KEY type=properties file='~_etcd_local_env) }}"

  - name: Convert private key to pkcs8 format
    shell: openssl pkcs8 -topk8 -in {{ _linstor_db_key }} -out {{ _linstor_db_key }}.pkcs8 -nocrypt

  - set_fact:
      linstor_db_key: "{{ _linstor_db_key }}.pkcs8"

  when: linstor_db_key is not defined
